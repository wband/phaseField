# =================================================================================
# Set the number of dimensions (1, 2, or 3 for a 1D, 2D, or 3D calculation)
# =================================================================================
set Number of dimensions = 2

# =================================================================================
# Set the length of the domain in all three dimensions
# =================================================================================
# Each axes spans from zero to the specified length
set Domain size X = 0.1
set Domain size Y = 0.1
set Domain size Z = 0.1

# =================================================================================
# Set the element parameters
# =================================================================================
# The number of elements in each direction is 2^(refineFactor) * subdivisions
# For optimal performance, use refineFactor primarily to determine the element size
set Subdivisions X = 1
set Subdivisions Y = 1
set Subdivisions Z = 1

set Refine factor = 7

# Set the polynomial degree of the element (allowed values: 1, 2, or 3)
set Element degree = 1

# =================================================================================
# =================================================================================
# The size of the time step
set Time step = 1.0

# The simulation ends when either the number of time steps is reached or the
# simulation time is reached.
set Number of time steps = 3000

# =================================================================================
# Set the linear solver parameters
# =================================================================================

subsection Linear solver parameters: u
    # Whether the tolerance value is compared to the residual (ABSOLUTE_RESIDUAL)
    # or the change in the residual (RELATIVE_RESIDUAL_CHANGE)
    set Tolerance type = ABSOLUTE_RESIDUAL

    # The tolerance for convergence (L2 norm)
    set Tolerance value = 1e-5

    # The maximum number of linear solver iterations per solve
    set Maximum linear solver iterations = 10000
end

# =================================================================================
# Set the output parameters
# =================================================================================
# Type of spacing between outputs ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Output condition =  EQUAL_SPACING
set List of time steps to output = 0, 

# Number of times the program outputs the fields (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of outputs = 30

# The number of time steps between updates being printed to the screen
set Skip print steps = 10

# =================================================================================
# Set the checkpoint/restart parameters
# =================================================================================
# Whether to start this simulation from the checkpoint of a previous simulation
set Load from a checkpoint = false

# Type of spacing between checkpoints ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Checkpoint condition = EQUAL_SPACING

# Number of times the creates checkpoints (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of checkpoints = 0

# =================================================================================
# Set the boundary conditions
# =================================================================================
# Set the boundary condition for each variable, where each variable is given by
# its name, as defined in equations.h. The four boundary condition
# types are NATURAL, DIRICHLET, NON_UNIFORM_DIRICHLET and PERIODIC. If all
# of the boundaries have the same boundary condition, only one boundary condition
# type needs to be given. If multiple boundary condition types are needed, give a
# comma-separated list of the types. The order is the miniumum of x, maximum of x,
# minimum of y, maximum of y, minimum of z, maximum of z (i.e left, right, bottom,
# top in 2D and left, right, bottom, top, front, back in 3D). The value of a
# Dirichlet BC is specfied in the following way -- DIRCHILET: val -- where 'val' is
# the desired value. If the boundary condition is NON_UNIFORM_DIRICHLET, the
# boundary condition should be specified in the appropriate function in 'ICs_and_BCs.h'.
# Example 1: All periodic BCs for variable 'c'
# set Boundary condition for variable c = PERIODIC
# Example 2: Zero-derivative BCs on the left and right, Dirichlet BCs with value
# 1.5 on the top and bottom for variable 'n' in 2D
# set Boundary condition for variable n = NATURAL, NATURAL, DIRICHLET: 1.5, DIRICHLET: 1.5

#set Boundary condition for variable n = NATURAL, NATURAL,  DIRICHLET: 0.0,  DIRICHLET: 0.0
set Boundary condition for variable n = NATURAL
set Boundary condition for variable Ex = NATURAL
set Boundary condition for variable Gx = NATURAL
set Boundary condition for variable dndt = NATURAL
set Boundary condition for variable u, x component = NON_UNIFORM_DIRICHLET, NON_UNIFORM_DIRICHLET, NON_UNIFORM_DIRICHLET, NON_UNIFORM_DIRICHLET
set Boundary condition for variable u, y component = NON_UNIFORM_DIRICHLET, NON_UNIFORM_DIRICHLET, NON_UNIFORM_DIRICHLET, NON_UNIFORM_DIRICHLET
set Boundary condition for variable u, z component = NATURAL

# =================================================================================
# Set the model constants
# =================================================================================
# Type options currently are double, int, bool, and tensor

# parameters are approximately for PMMA, with E=3 GPa, KIC=3 MPa m^(1/2), nu=0.35
# with energy in J, length in mm, stress in MPa

# initial crack length
set Model constant cracklength = -0.01, double

# Phase field mobility
set Model constant Mn = 1e-2, double

# Interface width parameter ell
set Model constant ell = 3.75e-3, double

# Fracture toughness scaling parameter Gc
set Model constant Gc0 = 3.0, double

# Elastic constants to be modified by spatially varying field Ex
set Model constant CIJ_base = (3e3,0.35), isotropic elastic constants

# Parameters for "surfing" boundary condition on displacement field u.
# This boundary condition imposes the analytical far-field displacements required
# to induce a stress intensity factor KI_nom at a crack tip location specified
# by the velocity vel_nom.  The displacements are calculated assuming that the entire
# domain has the elastic properties given in CIJ_base.

# nominal crack tip velocity
set Model constant vel_nom = 2e-5, double

# Stress intensity factor KI at nominal crack tip.  For pure mode I fracture, the
# critical stress intensity factor KIC is related to Gc by KIC=sqrt(Gc*E'), where
# E'=E for plane stress and E'=E/(1-nu^2) for plane strain, where E is Young's
# modulus and nu is Poisson's ratio.
# Note that there is a 'numerical' additional factor for Gc,
# Gc_num = Gc0*3/8*(h/ell), where h is the element size,
# h = (domain size)/((refine factor)^2*(number of subdivisions)). With default
# parameters, Gc_num ~ 0.08*Gc0.
set Model constant KI_nom = 103, double

