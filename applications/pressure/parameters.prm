# =================================================================================
# Set the number of dimensions (1, 2, or 3 for a 1D, 2D, or 3D calculation)
# =================================================================================
set Number of dimensions = 3

# =================================================================================
# Set the length of the domain in all three dimensions
# =================================================================================
# Each axes spans from zero to the specified length
set Domain size X = 64
set Domain size Y = 64
set Domain size Z = 1

# =================================================================================
# Set the element parameters
# =================================================================================
# The number of elements in each direction is 2^(refineFactor) * subdivisions
# For optimal performance, use refineFactor primarily to determine the element size
set Subdivisions X = 64
set Subdivisions Y = 64
set Subdivisions Z = 1

set Refine factor = 0

# Set the polynomial degree of the element (allowed values: 1, 2, or 3)
set Element degree = 1

# =================================================================================
# Set the time step parameters
# =================================================================================
# The size of the time step
set Time step = 0.01

# The simulation ends when either the number of time steps is reached or the
# simulation time is reached.
set Number of time steps = 1

# =================================================================================
# Set the linear solver parameters
# =================================================================================

subsection Linear solver parameters: u
    # Whether the tolerance value is compared to the residual (ABSOLUTE_RESIDUAL)
    # or the change in the residual (RELATIVE_RESIDUAL_CHANGE)
    set Tolerance type = ABSOLUTE_RESIDUAL

    # The tolerance for convergence (L2 norm)
    set Tolerance value = 1e-7

    # The maximum number of linear solver iterations per solve
    set Maximum linear solver iterations = 50000
end

# =================================================================================
# Set the output parameters
# =================================================================================
# Type of spacing between outputs ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Output condition =  EQUAL_SPACING
set List of time steps to output = 0, 

# Number of times the program outputs the fields (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of outputs = 1

# The number of time steps between updates being printed to the screen
set Skip print steps = 1

set Load initial conditions = false, true
set Load parallel file = false, false

set File names = phi_init_us, phi_init_us
set Variable names in the files = phi, phi

# =================================================================================
# Set the checkpoint/restart parameters
# =================================================================================
# Whether to start this simulation from the checkpoint of a previous simulation
set Load from a checkpoint = false

# Type of spacing between checkpoints ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Checkpoint condition = EQUAL_SPACING

# Number of times the creates checkpoints (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of checkpoints = 0

# =================================================================================
# Set the boundary conditions
# =================================================================================
# Set the boundary condition for each variable, where each variable is given by
# its name, as defined in equations.h. The four boundary condition
# types are NATURAL, DIRICHLET, NON_UNIFORM_DIRICHLET and PERIODIC. If all
# of the boundaries have the same boundary condition, only one boundary condition
# type needs to be given. If multiple boundary condition types are needed, give a
# comma-separated list of the types. The order is the miniumum of x, maximum of x,
# minimum of y, maximum of y, minimum of z, maximum of z (i.e left, right, bottom,
# top in 2D and left, right, bottom, top, front, back in 3D). The value of a
# Dirichlet BC is specfied in the following way -- DIRCHILET: val -- where 'val' is
# the desired value. If the boundary condition is NON_UNIFORM_DIRICHLET, the
# boundary condition should be specified in the appropriate function in 'ICs_and_BCs.h'.
# Example 1: All periodic BCs for variable 'c'
# set Boundary condition for variable c = PERIODIC
# Example 2: Zero-derivative BCs on the left and right, Dirichlet BCs with value
# 1.5 on the top and bottom for variable 'n' in 2D

set Boundary condition for variable u, x component = DIRICHLET: 0.0, NATURAL, NATURAL, NATURAL, NATURAL, NATURAL
set Boundary condition for variable u, y component = NATURAL, NATURAL, NATURAL, DIRICHLET: 0.0, NATURAL, NATURAL
set Boundary condition for variable u, z component = DIRICHLET: 0.0
set Boundary condition for variable phi = NATURAL

# =================================================================================
# Set the model constants
# =================================================================================
# Type options currently are double, int, bool, and tensor

set Model constant CIJ_base0 = (20.0,0.3), isotropic elastic constants

set Model constant pressure = 0.02, double # -0.00548